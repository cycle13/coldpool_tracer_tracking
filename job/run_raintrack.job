#!/bin/bash

##########################
# INPUT SETTINGS
##########################
# SET PATH
#
from='test1plus4K_fin11'  # only if rain tracking not running because tracer use the same as already traced
JOBNAME='test1plus4K_neut' #fin12' #multismall'  #name shouldnt be too long, improve f90 
FIN=$modelo/UCLA_testdata/test1plus4K/level2/test1plus4K_budget.nc # inputfile for precipitation
INv=/$modelo/UCLA_testdata/test1plus4K/level1/test1plus4K.out.vol.v.nc
INu=$modelo/UCLA_testdata/test1plus4K/level1/test1plus4K.out.vol.u.nc
domsizex=320 #  #todo: needs to be changed as input in rain tracking
domsizey=320 #


#from='lindp2K_13' #'test1plus4K'
#JOBNAME='lindp2K_500tr_lvl2' #lindp2K_500tr' #'test1plus4K_neworder' 
#FIN=/nbi/ac/conv1/henneb/Moseley2018/data/lind_p2K/lind_p2K_intensity.nc  
#INv=/nbi/ac/conv1/henneb/Moseley2018/data/lind_p2K/lind_p2K.out.vol.v.nc
#INu=/nbi/ac/conv1/henneb/Moseley2018/data/lind_p2K/lind_p2K.out.vol.u.nc
#domsizex=1024 #320 #  #todo: needs to be changed as input in rain tracking
#domsizey=1024 #320 #

OUT=/nbi/ac/conv1/henneb/results/coldpool/${JOBNAME}/

## SET PARAMETER
cutoff=1.0                        # cut off for precip (mm/s)
mincellsize=10.                              # minimum rain cell size, use 3 strings
trackstartsize=30.                           # minimum size when trac starts
mintracersize=50.                            # minimum size for tracer tracking 
dt=300
res=200
tracer=50 #500 # 120 #100
ntsets=0                                          # number of timesteps at which tracers are set after precip start
alltracer=50 #500 #(nsets +1) *tracer #600 # `expr ${ntracer} * ${ntsets}`

# alltracer=$((ntracer * ntsets))
age=20 # 50
rad=True
lformat=srv #nc #srv
lirt="bl" #"run" #copy" #"run" # "run" #"run" #'copy' 
#########################
### MAKE NAMELIST 
########################
     sed \
        -e s%@{nx}%${domsizex}%g \
        -e s%@{ny}%${domsizey}%g \
        -e s%@{dto}%${dt}%g \
        -e s%@{dx}%${res}%g \
        -e s%@{cutoff}%${cutoff}%g \
        -e s%@{mincellsize}%${mincellsize}%g \
        -e s%@{OUT}%${OUT}%g \
        -e s%@{tracer}%${tracer}%g \
        -e s%@{age}%${age}%g \
        -e s%@{radv}%${radv}%g\
        -e s%@{ntset}%${ntsets}%g\
        -e s%@{alltracer}%${alltracer}%g\
        -e s%@{lformat}%${lformat}%g\
       <namelist.tmp>namelist.dat

cp namelist.dat ${OUT}/.
cd ..
#
############################
### DIRECTORY STRUCTURE
#############################
mkdir -p ${OUT}/output/cp/
mkdir -p ${OUT}/output/raincell
mkdir -p ${OUT}/input/cp/
mkdir -p ${OUT}/input/raincell

#############################
##### JOB OUTPUT 
############################
###echo 'run raincell tracking with:' > job/${JOBNAME}.o
### to do: print date etc in job output
###
if [ $lirt == "run" ]; then

#####################################################
### prepare input
######################################################
##if [ ! -f ${OUT}/input/irt_objects_input_00.srv ]; then
# cdo -f srv selvar,r_int $FIN ${OUT}/input/raincell/irt_objects_input_00.srv
##fi
 cdo -f srv selvar,r_int $FIN ${OUT}/input/raincell/irt_objects_input_00.srv
 cdo -f srv selvar,conv_h_sfc $FIN ${OUT}/input/raincell/irt_objects_input_01.srv

#
#####################################################
### run_tracking
#####################################################
  ./bin/raincell/irt_objects_release.x 1
  ./bin/raincell/irt_advection_field_release.x
  ./bin/raincell/irt_tracks_release.x
  sort -n -k2 ${OUT}/output/raincell/irt_tracks_nohead_output.txt > ${OUT}/output/raincell/irt_tracks_sorted.txt
  ./bin/raincell/irt_trackmask_release.x

  cdo -f nc copy ${OUT}/output/raincell/irt_objects_mask.srv ${OUT}/output/raincell/irt_objects_mask.nc
  cdo -f nc copy ${OUT}/output/raincell/irt_tracks_mask.srv ${OUT}/output/raincell/irt_tracks_mask.nc
  ncl path=\"${OUT}/output/raincell/\" bin/fill_tracks.ncl

###################################################
# prepare input for cold pool tracking 
##################################################
#
  ./bin/cut.bsh ${OUT} # cuts the header and body to separate files
  sort -n -k2 ${OUT}/output/raincell/headerfile.txt > ${OUT}/input/cp/irt_tracks_header_sorted.txt
  sort -n -k2 ${OUT}/output/raincell/irt_tracks_output_pure.txt > ${OUT}/output/raincell/irt_tracks_output_pure_sort.txt

fi 
# now with srv cdo sellevel,50 ${INv} input/cp/input_v.nc
# now with srv cdo sellevel,50 ${INu} input/cp/input_u.nc
#cdo sellevel,50 ${INv} ${OUT}/input/cp/input_v.nc
#cdo sellevel,50 ${INu} ${OUT}/input/cp/input_u.nc

#ncrename -O -v u,U ${OUT}/input/cp/input_u.nc
#ncrename -O -v v,V ${OUT}/input/cp/input_v.nc



#cdo -f srv sellevel,50 ${INv} ${OUT}/input/cp/input_v.srv
#cdo -f srv sellevel,50 ${INu} ${OUT}/input/cp/input_u.srv
#
#
####################################################
## or copy from another experiment with same simulation
###################################################
if [ $lirt == "copy" ]; then
  rsync -r $OUT/../${from}/output/raincell $OUT/output/.
  rsync -r $OUT/../${from}/input/raincell $OUT/output/.
  rsync -r $OUT/../${from}/input/cp $OUT/input/.
fi 

cdo -f srv sellevel,50 ${INv} ${OUT}/input/cp/input_v.srv
cdo -f srv sellevel,50 ${INu} ${OUT}/input/cp/input_u.srv

python bin/merger.py $JOBNAME 
echo 'python bin/merger.py' $JOBNAME
#ncl path=\"${OUT}\" tr=${trackstartsize} tr2=${mintracersize} dx=${domsizex} dy=${domsizey} bin/merger.ncl #makes list of merging cold pools for special treatment
#cp ${OUT}/../${from}/input/cp/mergingCPs.txt ${OUT}/input/cp/mergingCPs.txt 
sort -n -k2 ${OUT}/output/raincell/irt_tracks_output_pure.txt > ${OUT}/input/cp/tracks_body_time_sorted.txt
#cp /nbi/ac/conv1/henneb/results/coldpool/test1plus4K_finneu1/input/cp/mergingCPs.txt ${OUT}/input/cp/.
##
##
./bin/cp/tracer_tracking.x
#
########################
## CLEANING
#####################
#cp -r job ${OUT}/.
##rm info.txt
##rm mergingCPs.txt
#
